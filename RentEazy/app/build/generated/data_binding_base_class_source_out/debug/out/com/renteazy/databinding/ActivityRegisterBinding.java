// Generated by view binder compiler. Do not edit!
package com.renteazy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.renteazy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText emailEditText;

  @NonNull
  public final TextInputLayout emailInputLayout;

  @NonNull
  public final TextView loginLink;

  @NonNull
  public final TextInputEditText nameEditText;

  @NonNull
  public final TextInputLayout nameInputLayout;

  @NonNull
  public final TextInputEditText passwordEditText;

  @NonNull
  public final TextInputLayout passwordInputLayout;

  @NonNull
  public final TextInputEditText phoneEditText;

  @NonNull
  public final TextInputLayout phoneInputLayout;

  @NonNull
  public final Button registerButton;

  @NonNull
  public final TextView titleTextView;

  @NonNull
  public final Spinner userTypeSpinner;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText emailEditText, @NonNull TextInputLayout emailInputLayout,
      @NonNull TextView loginLink, @NonNull TextInputEditText nameEditText,
      @NonNull TextInputLayout nameInputLayout, @NonNull TextInputEditText passwordEditText,
      @NonNull TextInputLayout passwordInputLayout, @NonNull TextInputEditText phoneEditText,
      @NonNull TextInputLayout phoneInputLayout, @NonNull Button registerButton,
      @NonNull TextView titleTextView, @NonNull Spinner userTypeSpinner) {
    this.rootView = rootView;
    this.emailEditText = emailEditText;
    this.emailInputLayout = emailInputLayout;
    this.loginLink = loginLink;
    this.nameEditText = nameEditText;
    this.nameInputLayout = nameInputLayout;
    this.passwordEditText = passwordEditText;
    this.passwordInputLayout = passwordInputLayout;
    this.phoneEditText = phoneEditText;
    this.phoneInputLayout = phoneInputLayout;
    this.registerButton = registerButton;
    this.titleTextView = titleTextView;
    this.userTypeSpinner = userTypeSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emailEditText;
      TextInputEditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.emailInputLayout;
      TextInputLayout emailInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailInputLayout == null) {
        break missingId;
      }

      id = R.id.loginLink;
      TextView loginLink = ViewBindings.findChildViewById(rootView, id);
      if (loginLink == null) {
        break missingId;
      }

      id = R.id.nameEditText;
      TextInputEditText nameEditText = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText == null) {
        break missingId;
      }

      id = R.id.nameInputLayout;
      TextInputLayout nameInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (nameInputLayout == null) {
        break missingId;
      }

      id = R.id.passwordEditText;
      TextInputEditText passwordEditText = ViewBindings.findChildViewById(rootView, id);
      if (passwordEditText == null) {
        break missingId;
      }

      id = R.id.passwordInputLayout;
      TextInputLayout passwordInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordInputLayout == null) {
        break missingId;
      }

      id = R.id.phoneEditText;
      TextInputEditText phoneEditText = ViewBindings.findChildViewById(rootView, id);
      if (phoneEditText == null) {
        break missingId;
      }

      id = R.id.phoneInputLayout;
      TextInputLayout phoneInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (phoneInputLayout == null) {
        break missingId;
      }

      id = R.id.registerButton;
      Button registerButton = ViewBindings.findChildViewById(rootView, id);
      if (registerButton == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      id = R.id.userTypeSpinner;
      Spinner userTypeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (userTypeSpinner == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, emailEditText,
          emailInputLayout, loginLink, nameEditText, nameInputLayout, passwordEditText,
          passwordInputLayout, phoneEditText, phoneInputLayout, registerButton, titleTextView,
          userTypeSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
